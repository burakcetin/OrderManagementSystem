version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - order-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - order-network
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - order-network
    restart: unless-stopped

  order-api:
    build:
      context: .
      dockerfile: src/OrderManagement.API/Dockerfile
    container_name: order-api
    ports:
      - "8005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__Host=rabbitmq
      - Logging__Loki__Url=http://loki:3100
      - ConnectionStrings__RedisConnection=redis:6379
    depends_on:
      - rabbitmq
      - loki
      - redis
    networks:
      - order-network
    restart: unless-stopped

  order-worker:
    build:
      context: .
      dockerfile: src/OrderManagement.WorkerService/Dockerfile
    container_name: order-worker
    environment:
      - DOTNET_ENVIRONMENT=Development
      - RabbitMQ__Host=rabbitmq
      - Logging__Loki__Url=http://loki:3100
      - ConnectionStrings__RedisConnection=redis:6379
    depends_on:
      - rabbitmq
      - order-api
      - loki
    networks:
      - order-network
    restart: unless-stopped

  product-api:
    build:
      context: .
      dockerfile: src/ProductCatalog.API/Dockerfile
    container_name: product-api
    ports:
      - "8002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Logging__Loki__Url=http://loki:3100
      - ConnectionStrings__RedisConnection=redis:6379
    depends_on:
      - loki
    networks:
      - order-network
    restart: unless-stopped

  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    networks:
      - order-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    networks:
      - order-network
    restart: unless-stopped

networks:
  order-network:
    driver: bridge

volumes:
  rabbitmq_data:
  loki_data:
  grafana_data:
  redis_data: